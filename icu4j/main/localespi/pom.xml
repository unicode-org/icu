<?xml version="1.0" encoding="UTF-8"?>
<!--
* Â© 2023 and later: Unicode, Inc. and others.
* License & terms of use: http://www.unicode.org/copyright.html
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.ibm.icu</groupId>
    <artifactId>icu4j-root</artifactId>
    <version>78.0.1-SNAPSHOT</version>
    <relativePath>../../pom.xml</relativePath>
  </parent>

  <artifactId>icu4j-localespi</artifactId>
  <name>ICU4J Locale Service Provider</name>
  <description>icu4j-localespi is a supplemental library for icu4j, implementing Java Locale SPI.</description>
  <url>${proj.url}</url>
  <scm>
    <connection>${proj.scm.connection}</connection>
    <developerConnection>${proj.scm.developerConnection}</developerConnection>
    <url>${proj.scm.url}</url>
  </scm>

  <properties>
    <proj.displayname>JDK locale service provider</proj.displayname>
    <icu4j.api.doc.root.dir>${project.basedir}/../..</icu4j.api.doc.root.dir>
    <mf.Automatic-Module-Name>com.ibm.icu.localespi</mf.Automatic-Module-Name>
  </properties>

  <dependencies>
    <dependency>
      <groupId>com.ibm.icu</groupId>
      <artifactId>icu4j</artifactId>
      <version>${project.version}</version>
    </dependency>

    <!-- Test -->
    <dependency>
      <groupId>com.ibm.icu</groupId>
      <artifactId>core</artifactId>
      <version>${project.version}</version>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.ibm.icu</groupId>
      <artifactId>framework</artifactId>
      <version>${project.version}</version>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.ibm.icu</groupId>
      <artifactId>currdata</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.ibm.icu</groupId>
      <artifactId>langdata</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.ibm.icu</groupId>
      <artifactId>regiondata</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <!--
            Do not run localespi tests as unit tests because they depend on loading the main code via a .jar file
            via the Java extensions mechanism.
          -->
          <skipTests>true</skipTests>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-failsafe-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <includes>
            <!-- treat localespi tests as integration tests because they depend on .jar files from package phase -->
            <include>**/*.java</include>
            <!-- default integration test wildcard patterns -->
            <include>**/IT*.java</include>
            <include>**/*IT.java</include>
            <include>**/*ITCase.java</include>
          </includes>
          <!--
              Configure to use the locale service provider using the .jar file of `icu4j-localespi` main code from the `package` phase
              See: https://stackoverflow.com/questions/45223908/why-does-the-java-extension-mechanism-not-check-the-classpath-for-an-optional-pa
            -->
          <systemPropertyVariables>
            <java.locale.providers>CLDR,COMPAT,SPI</java.locale.providers>
          </systemPropertyVariables>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>flatten-maven-plugin</artifactId>
      </plugin>

      <plugin>
        <artifactId>maven-deploy-plugin</artifactId>
        <!-- We want to deploy this to Maven -->
        <configuration>
          <skip>false</skip>
        </configuration>
      </plugin>

    </plugins>
  </build>

  <profiles>
    <profile>
      <id>with_javadoc</id>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-javadoc-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>jar</goal>
                </goals>
                <configuration>
                  <!-- All files in com/ibm/icu/impl folders are exluded from javadoc.
                    So we need to bring back this one file, to match the previously published artifacts.
                    Without this all java files are excluded and no javadoc is generated.
                  -->
                  <sourceFileIncludes>
                    <include>ICULocaleServiceProvider.java</include>
                  </sourceFileIncludes>
                  <sourcepath>${basedir}/src/main/java/com/ibm/icu/impl/javaspi</sourcepath>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
